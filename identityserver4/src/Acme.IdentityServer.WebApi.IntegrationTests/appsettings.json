{
    "Serilog": {
        "Using": [
            "Serilog.Sinks.ApplicationInsights",
            "Serilog.Sinks.Seq",
            "Serilog.Sinks.Console",
            "Serilog.Settings.Configuration"
        ],
        "MinimumLevel": {
            "Default": "Debug",
            "Override": {
                "Microsoft": "Warning",
                "Microsoft.AspNetCore.Mvc.Internal": "Warning",
                "Microsoft.EntityFrameworkCore": "Information",
                "System": "Information"
            }
        },
        "WriteTo": [
            {
                "Name": "Console",
                "Args": {
                    "theme": "Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme::Code, Serilog.Sinks.Console",
                    "outputTemplate": "[{Timestamp:HH:mm:ss} {Level:u3}] [{CorrelationId}][{RequestId}] {Message:lj}{NewLine}{Exception}"
                }
            },
            {
                "Name": "ApplicationInsights",
                "Args": {
                    "restrictedToMinimumLevel": "Verbose",
                    "telemetryConverter": "Serilog.Sinks.ApplicationInsights.Sinks.ApplicationInsights.TelemetryConverters.TraceTelemetryConverter, Serilog.Sinks.ApplicationInsights"
                }
            }
        ],
        "Enrich": [
            "FromLogContext",
            "WithMachineName",
            "WithEnvironmentUserName",
            "WithThreadId",
            "WithEventType"
        ],
        "Properties": {
            "Application": "identityserver"
        }
    },
    "Seq": {
        "ServerUrl": ""
    },
    "ApplicationInsights": {
        "InstrumentationKey": "",
        "EnableAdaptiveSampling": false
    },
    "Cors": {
        "Origins": [
            "http://localhost:4200",
            "http://*.Acme.local",
            "https://*.Acme.com",
            "https://*.Acmeusa.com"
        ]
    },
    "HealthCheckHostedService": {
        "Name": "{{Service:Name}}",
        "Enabled": true,
        "Interval": 5,
        "CacheDuration": 30,
        "Checks": [
            {
                "Name": "identityserver-db",
                "Type": "dbcontext",
                "Required": true,
                "Interval": 30,
                "Timeout": 5
            }
        ]
    },
    "OutboxHostedService": {
        "BatchSize": 5,
        "Enabled": true,
        "Interval": 5,
        "PurgePublished": true
    },
    "ConnectionStrings": {
        "AuthConnString": "Server=tcp:localhost;Database=identityserver;integrated security=True;MultipleActiveResultSets=true;"
    },
    "issuerUri": "http://localhost:5004",
    "_publicOrigin": "http://identityserver.Acme.testcontainers",
    "_issuerUri": "http://chiron.docker.local:8000/auth",
    "_defaultUrl": "http://chiron.docker.local:8000/adminui",
    "ServiceBus": {
        "Protocol": "amqp",
        "Namespace": "rabbitmq",
        "Policy": "admin",
        "Key": "password",
        "AppName": "auth",
        "Address": "auth.queue"
    },
    "authentication": {
        "authority": "http://localhost:5004",
        "apiResource": "identity",
        "apiResourceSecret": "secret",
        "requireHttpsMetadata": false
    },
    "externalProviders": [
        {
            "scheme": "AAD",
            "displayName": "Azure Active Directory",
            "authority": "https://login.microsoftonline.com/common",
            "clientId": "clientId",
            "callbackPath": "/signin-oidc",
            "scopes": [ "openid", "profile" ],
            "providerIdClaim": "nameid",
            "usernameclaim": "upn",
            "claims": [ "email", "family_name", "given_name", "groups", "name" ]
        },
        {
            "scheme": "Okta",
            "displayName": "Okta",
            "authority": "https://oktaauthority",
            "clientId": "clientId",
            "callbackPath": "/signin-oidc-okta",
            "scopes": [ "openid", "profile", "groups", "email", "phone" ],
            "providerIdClaim": "nameid",
            "usernameClaim": "upn",
            "claims": [ "email", "family_name", "given_name", "groups", "name" ],
            "AddIdTokenHint": true
        }
    ],
    "RestrictedEmailDomains": [ "Acme.com", "Acmeusa.com" ]
}
